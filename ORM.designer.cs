#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Jardines_ICBF
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_ICBF")]
	public partial class ORMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAcudientes(Acudientes instance);
    partial void UpdateAcudientes(Acudientes instance);
    partial void DeleteAcudientes(Acudientes instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    partial void InsertAsistencias(Asistencias instance);
    partial void UpdateAsistencias(Asistencias instance);
    partial void DeleteAsistencias(Asistencias instance);
    partial void InsertAvancesAcademicos(AvancesAcademicos instance);
    partial void UpdateAvancesAcademicos(AvancesAcademicos instance);
    partial void DeleteAvancesAcademicos(AvancesAcademicos instance);
    partial void InsertDatosBasicos(DatosBasicos instance);
    partial void UpdateDatosBasicos(DatosBasicos instance);
    partial void DeleteDatosBasicos(DatosBasicos instance);
    partial void InsertEPS(EPS instance);
    partial void UpdateEPS(EPS instance);
    partial void DeleteEPS(EPS instance);
    partial void InsertJardines(Jardines instance);
    partial void UpdateJardines(Jardines instance);
    partial void DeleteJardines(Jardines instance);
    partial void InsertNinos(Ninos instance);
    partial void UpdateNinos(Ninos instance);
    partial void DeleteNinos(Ninos instance);
    #endregion
		
		public ORMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Acudientes> Acudientes
		{
			get
			{
				return this.GetTable<Acudientes>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
		
		public System.Data.Linq.Table<Asistencias> Asistencias
		{
			get
			{
				return this.GetTable<Asistencias>();
			}
		}
		
		public System.Data.Linq.Table<AvancesAcademicos> AvancesAcademicos
		{
			get
			{
				return this.GetTable<AvancesAcademicos>();
			}
		}
		
		public System.Data.Linq.Table<DatosBasicos> DatosBasicos
		{
			get
			{
				return this.GetTable<DatosBasicos>();
			}
		}
		
		public System.Data.Linq.Table<EPS> EPS
		{
			get
			{
				return this.GetTable<EPS>();
			}
		}
		
		public System.Data.Linq.Table<Jardines> Jardines
		{
			get
			{
				return this.GetTable<Jardines>();
			}
		}
		
		public System.Data.Linq.Table<Ninos> Ninos
		{
			get
			{
				return this.GetTable<Ninos>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acudientes")]
	public partial class Acudientes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAcudiente;
		
		private long _cedula;
		
		private string _telefono;
		
		private string _correo;
		
		private int _idUsuario;
		
		private EntitySet<Ninos> _Ninos;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAcudienteChanging(int value);
    partial void OnidAcudienteChanged();
    partial void OncedulaChanging(long value);
    partial void OncedulaChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    #endregion
		
		public Acudientes()
		{
			this._Ninos = new EntitySet<Ninos>(new Action<Ninos>(this.attach_Ninos), new Action<Ninos>(this.detach_Ninos));
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAcudiente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAcudiente
		{
			get
			{
				return this._idAcudiente;
			}
			set
			{
				if ((this._idAcudiente != value))
				{
					this.OnidAcudienteChanging(value);
					this.SendPropertyChanging();
					this._idAcudiente = value;
					this.SendPropertyChanged("idAcudiente");
					this.OnidAcudienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cedula", DbType="BigInt NOT NULL")]
		public long cedula
		{
			get
			{
				return this._cedula;
			}
			set
			{
				if ((this._cedula != value))
				{
					this.OncedulaChanging(value);
					this.SendPropertyChanging();
					this._cedula = value;
					this.SendPropertyChanged("cedula");
					this.OncedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="NChar(15)")]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", DbType="Int NOT NULL")]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acudientes_Ninos", Storage="_Ninos", ThisKey="idAcudiente", OtherKey="idAcudiente")]
		public EntitySet<Ninos> Ninos
		{
			get
			{
				return this._Ninos;
			}
			set
			{
				this._Ninos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Acudientes", Storage="_Usuarios", ThisKey="idUsuario", OtherKey="idUsuario", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Acudientes.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Acudientes.Add(this);
						this._idUsuario = value.idUsuario;
					}
					else
					{
						this._idUsuario = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ninos(Ninos entity)
		{
			this.SendPropertyChanging();
			entity.Acudientes = this;
		}
		
		private void detach_Ninos(Ninos entity)
		{
			this.SendPropertyChanging();
			entity.Acudientes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsuario;
		
		private string _rol;
		
		private string _clave;
		
		private string _nombreUsuario;
		
		private int _idDatosBasicos;
		
		private EntitySet<Acudientes> _Acudientes;
		
		private EntityRef<DatosBasicos> _DatosBasicos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnrolChanging(string value);
    partial void OnrolChanged();
    partial void OnclaveChanging(string value);
    partial void OnclaveChanged();
    partial void OnnombreUsuarioChanging(string value);
    partial void OnnombreUsuarioChanged();
    partial void OnidDatosBasicosChanging(int value);
    partial void OnidDatosBasicosChanged();
    #endregion
		
		public Usuarios()
		{
			this._Acudientes = new EntitySet<Acudientes>(new Action<Acudientes>(this.attach_Acudientes), new Action<Acudientes>(this.detach_Acudientes));
			this._DatosBasicos = default(EntityRef<DatosBasicos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rol", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string rol
		{
			get
			{
				return this._rol;
			}
			set
			{
				if ((this._rol != value))
				{
					this.OnrolChanging(value);
					this.SendPropertyChanging();
					this._rol = value;
					this.SendPropertyChanged("rol");
					this.OnrolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clave", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string clave
		{
			get
			{
				return this._clave;
			}
			set
			{
				if ((this._clave != value))
				{
					this.OnclaveChanging(value);
					this.SendPropertyChanging();
					this._clave = value;
					this.SendPropertyChanged("clave");
					this.OnclaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreUsuario", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string nombreUsuario
		{
			get
			{
				return this._nombreUsuario;
			}
			set
			{
				if ((this._nombreUsuario != value))
				{
					this.OnnombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._nombreUsuario = value;
					this.SendPropertyChanged("nombreUsuario");
					this.OnnombreUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDatosBasicos", DbType="Int NOT NULL")]
		public int idDatosBasicos
		{
			get
			{
				return this._idDatosBasicos;
			}
			set
			{
				if ((this._idDatosBasicos != value))
				{
					if (this._DatosBasicos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDatosBasicosChanging(value);
					this.SendPropertyChanging();
					this._idDatosBasicos = value;
					this.SendPropertyChanged("idDatosBasicos");
					this.OnidDatosBasicosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Acudientes", Storage="_Acudientes", ThisKey="idUsuario", OtherKey="idUsuario")]
		public EntitySet<Acudientes> Acudientes
		{
			get
			{
				return this._Acudientes;
			}
			set
			{
				this._Acudientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatosBasicos_Usuarios", Storage="_DatosBasicos", ThisKey="idDatosBasicos", OtherKey="idDatosBasicos", IsForeignKey=true)]
		public DatosBasicos DatosBasicos
		{
			get
			{
				return this._DatosBasicos.Entity;
			}
			set
			{
				DatosBasicos previousValue = this._DatosBasicos.Entity;
				if (((previousValue != value) 
							|| (this._DatosBasicos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatosBasicos.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._DatosBasicos.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._idDatosBasicos = value.idDatosBasicos;
					}
					else
					{
						this._idDatosBasicos = default(int);
					}
					this.SendPropertyChanged("DatosBasicos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Acudientes(Acudientes entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Acudientes(Acudientes entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Asistencias")]
	public partial class Asistencias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAsistencia;
		
		private System.DateTime _fecha;
		
		private string _estadoNino;
		
		private int _idNino;
		
		private EntityRef<Ninos> _Ninos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAsistenciaChanging(int value);
    partial void OnidAsistenciaChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    partial void OnestadoNinoChanging(string value);
    partial void OnestadoNinoChanged();
    partial void OnidNinoChanging(int value);
    partial void OnidNinoChanged();
    #endregion
		
		public Asistencias()
		{
			this._Ninos = default(EntityRef<Ninos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAsistencia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAsistencia
		{
			get
			{
				return this._idAsistencia;
			}
			set
			{
				if ((this._idAsistencia != value))
				{
					this.OnidAsistenciaChanging(value);
					this.SendPropertyChanging();
					this._idAsistencia = value;
					this.SendPropertyChanged("idAsistencia");
					this.OnidAsistenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="Date NOT NULL")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estadoNino", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string estadoNino
		{
			get
			{
				return this._estadoNino;
			}
			set
			{
				if ((this._estadoNino != value))
				{
					this.OnestadoNinoChanging(value);
					this.SendPropertyChanging();
					this._estadoNino = value;
					this.SendPropertyChanged("estadoNino");
					this.OnestadoNinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNino", DbType="Int NOT NULL")]
		public int idNino
		{
			get
			{
				return this._idNino;
			}
			set
			{
				if ((this._idNino != value))
				{
					if (this._Ninos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNinoChanging(value);
					this.SendPropertyChanging();
					this._idNino = value;
					this.SendPropertyChanged("idNino");
					this.OnidNinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ninos_Asistencias", Storage="_Ninos", ThisKey="idNino", OtherKey="idNino", IsForeignKey=true)]
		public Ninos Ninos
		{
			get
			{
				return this._Ninos.Entity;
			}
			set
			{
				Ninos previousValue = this._Ninos.Entity;
				if (((previousValue != value) 
							|| (this._Ninos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ninos.Entity = null;
						previousValue.Asistencias.Remove(this);
					}
					this._Ninos.Entity = value;
					if ((value != null))
					{
						value.Asistencias.Add(this);
						this._idNino = value.idNino;
					}
					else
					{
						this._idNino = default(int);
					}
					this.SendPropertyChanged("Ninos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AvancesAcademicos")]
	public partial class AvancesAcademicos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAvanceAcademico;
		
		private int _anioEscolar;
		
		private string _nivel;
		
		private string _notas;
		
		private string _descripcion;
		
		private System.DateTime _fechaEntrega;
		
		private int _idNino;
		
		private EntityRef<Ninos> _Ninos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAvanceAcademicoChanging(int value);
    partial void OnidAvanceAcademicoChanged();
    partial void OnanioEscolarChanging(int value);
    partial void OnanioEscolarChanged();
    partial void OnnivelChanging(string value);
    partial void OnnivelChanged();
    partial void OnnotasChanging(string value);
    partial void OnnotasChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnfechaEntregaChanging(System.DateTime value);
    partial void OnfechaEntregaChanged();
    partial void OnidNinoChanging(int value);
    partial void OnidNinoChanged();
    #endregion
		
		public AvancesAcademicos()
		{
			this._Ninos = default(EntityRef<Ninos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAvanceAcademico", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAvanceAcademico
		{
			get
			{
				return this._idAvanceAcademico;
			}
			set
			{
				if ((this._idAvanceAcademico != value))
				{
					this.OnidAvanceAcademicoChanging(value);
					this.SendPropertyChanging();
					this._idAvanceAcademico = value;
					this.SendPropertyChanged("idAvanceAcademico");
					this.OnidAvanceAcademicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anioEscolar", DbType="Int NOT NULL")]
		public int anioEscolar
		{
			get
			{
				return this._anioEscolar;
			}
			set
			{
				if ((this._anioEscolar != value))
				{
					this.OnanioEscolarChanging(value);
					this.SendPropertyChanging();
					this._anioEscolar = value;
					this.SendPropertyChanged("anioEscolar");
					this.OnanioEscolarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nivel", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string nivel
		{
			get
			{
				return this._nivel;
			}
			set
			{
				if ((this._nivel != value))
				{
					this.OnnivelChanging(value);
					this.SendPropertyChanging();
					this._nivel = value;
					this.SendPropertyChanged("nivel");
					this.OnnivelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notas", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string notas
		{
			get
			{
				return this._notas;
			}
			set
			{
				if ((this._notas != value))
				{
					this.OnnotasChanging(value);
					this.SendPropertyChanging();
					this._notas = value;
					this.SendPropertyChanged("notas");
					this.OnnotasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaEntrega", DbType="Date NOT NULL")]
		public System.DateTime fechaEntrega
		{
			get
			{
				return this._fechaEntrega;
			}
			set
			{
				if ((this._fechaEntrega != value))
				{
					this.OnfechaEntregaChanging(value);
					this.SendPropertyChanging();
					this._fechaEntrega = value;
					this.SendPropertyChanged("fechaEntrega");
					this.OnfechaEntregaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNino", DbType="Int NOT NULL")]
		public int idNino
		{
			get
			{
				return this._idNino;
			}
			set
			{
				if ((this._idNino != value))
				{
					if (this._Ninos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNinoChanging(value);
					this.SendPropertyChanging();
					this._idNino = value;
					this.SendPropertyChanged("idNino");
					this.OnidNinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ninos_AvancesAcademicos", Storage="_Ninos", ThisKey="idNino", OtherKey="idNino", IsForeignKey=true)]
		public Ninos Ninos
		{
			get
			{
				return this._Ninos.Entity;
			}
			set
			{
				Ninos previousValue = this._Ninos.Entity;
				if (((previousValue != value) 
							|| (this._Ninos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ninos.Entity = null;
						previousValue.AvancesAcademicos.Remove(this);
					}
					this._Ninos.Entity = value;
					if ((value != null))
					{
						value.AvancesAcademicos.Add(this);
						this._idNino = value.idNino;
					}
					else
					{
						this._idNino = default(int);
					}
					this.SendPropertyChanged("Ninos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatosBasicos")]
	public partial class DatosBasicos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDatosBasicos;
		
		private string _nombres;
		
		private System.DateTime _fechaNacimiento;
		
		private string _celular;
		
		private string _direccion;
		
		private EntitySet<Usuarios> _Usuarios;
		
		private EntitySet<Ninos> _Ninos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDatosBasicosChanging(int value);
    partial void OnidDatosBasicosChanged();
    partial void OnnombresChanging(string value);
    partial void OnnombresChanged();
    partial void OnfechaNacimientoChanging(System.DateTime value);
    partial void OnfechaNacimientoChanged();
    partial void OncelularChanging(string value);
    partial void OncelularChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    #endregion
		
		public DatosBasicos()
		{
			this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
			this._Ninos = new EntitySet<Ninos>(new Action<Ninos>(this.attach_Ninos), new Action<Ninos>(this.detach_Ninos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDatosBasicos", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDatosBasicos
		{
			get
			{
				return this._idDatosBasicos;
			}
			set
			{
				if ((this._idDatosBasicos != value))
				{
					this.OnidDatosBasicosChanging(value);
					this.SendPropertyChanging();
					this._idDatosBasicos = value;
					this.SendPropertyChanged("idDatosBasicos");
					this.OnidDatosBasicosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombres", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string nombres
		{
			get
			{
				return this._nombres;
			}
			set
			{
				if ((this._nombres != value))
				{
					this.OnnombresChanging(value);
					this.SendPropertyChanging();
					this._nombres = value;
					this.SendPropertyChanged("nombres");
					this.OnnombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaNacimiento", DbType="Date NOT NULL")]
		public System.DateTime fechaNacimiento
		{
			get
			{
				return this._fechaNacimiento;
			}
			set
			{
				if ((this._fechaNacimiento != value))
				{
					this.OnfechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._fechaNacimiento = value;
					this.SendPropertyChanged("fechaNacimiento");
					this.OnfechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celular", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string celular
		{
			get
			{
				return this._celular;
			}
			set
			{
				if ((this._celular != value))
				{
					this.OncelularChanging(value);
					this.SendPropertyChanging();
					this._celular = value;
					this.SendPropertyChanged("celular");
					this.OncelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="NChar(80) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatosBasicos_Usuarios", Storage="_Usuarios", ThisKey="idDatosBasicos", OtherKey="idDatosBasicos")]
		public EntitySet<Usuarios> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatosBasicos_Ninos", Storage="_Ninos", ThisKey="idDatosBasicos", OtherKey="idDatosBasicos")]
		public EntitySet<Ninos> Ninos
		{
			get
			{
				return this._Ninos;
			}
			set
			{
				this._Ninos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.DatosBasicos = this;
		}
		
		private void detach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.DatosBasicos = null;
		}
		
		private void attach_Ninos(Ninos entity)
		{
			this.SendPropertyChanging();
			entity.DatosBasicos = this;
		}
		
		private void detach_Ninos(Ninos entity)
		{
			this.SendPropertyChanging();
			entity.DatosBasicos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EPS")]
	public partial class EPS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEps;
		
		private string _nombre;
		
		private EntitySet<Ninos> _Ninos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEpsChanging(int value);
    partial void OnidEpsChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public EPS()
		{
			this._Ninos = new EntitySet<Ninos>(new Action<Ninos>(this.attach_Ninos), new Action<Ninos>(this.detach_Ninos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEps", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEps
		{
			get
			{
				return this._idEps;
			}
			set
			{
				if ((this._idEps != value))
				{
					this.OnidEpsChanging(value);
					this.SendPropertyChanging();
					this._idEps = value;
					this.SendPropertyChanged("idEps");
					this.OnidEpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EPS_Ninos", Storage="_Ninos", ThisKey="idEps", OtherKey="idEps")]
		public EntitySet<Ninos> Ninos
		{
			get
			{
				return this._Ninos;
			}
			set
			{
				this._Ninos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ninos(Ninos entity)
		{
			this.SendPropertyChanging();
			entity.EPS = this;
		}
		
		private void detach_Ninos(Ninos entity)
		{
			this.SendPropertyChanging();
			entity.EPS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Jardines")]
	public partial class Jardines : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idJardin;
		
		private string _nombre;
		
		private string _direccion;
		
		private string _estado;
		
		private EntitySet<Ninos> _Ninos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidJardinChanging(int value);
    partial void OnidJardinChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    #endregion
		
		public Jardines()
		{
			this._Ninos = new EntitySet<Ninos>(new Action<Ninos>(this.attach_Ninos), new Action<Ninos>(this.detach_Ninos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idJardin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idJardin
		{
			get
			{
				return this._idJardin;
			}
			set
			{
				if ((this._idJardin != value))
				{
					this.OnidJardinChanging(value);
					this.SendPropertyChanging();
					this._idJardin = value;
					this.SendPropertyChanged("idJardin");
					this.OnidJardinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="NChar(80) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jardines_Ninos", Storage="_Ninos", ThisKey="idJardin", OtherKey="idJardin")]
		public EntitySet<Ninos> Ninos
		{
			get
			{
				return this._Ninos;
			}
			set
			{
				this._Ninos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ninos(Ninos entity)
		{
			this.SendPropertyChanging();
			entity.Jardines = this;
		}
		
		private void detach_Ninos(Ninos entity)
		{
			this.SendPropertyChanging();
			entity.Jardines = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ninos")]
	public partial class Ninos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idNino;
		
		private long _NUIP;
		
		private string _tipoSangre;
		
		private string _ciudadNacimiento;
		
		private int _peso;
		
		private double _estatura;
		
		private int _idJardin;
		
		private int _idAcudiente;
		
		private int _idDatosBasicos;
		
		private int _idEps;
		
		private EntitySet<Asistencias> _Asistencias;
		
		private EntitySet<AvancesAcademicos> _AvancesAcademicos;
		
		private EntityRef<Acudientes> _Acudientes;
		
		private EntityRef<DatosBasicos> _DatosBasicos;
		
		private EntityRef<EPS> _EPS;
		
		private EntityRef<Jardines> _Jardines;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidNinoChanging(int value);
    partial void OnidNinoChanged();
    partial void OnNUIPChanging(long value);
    partial void OnNUIPChanged();
    partial void OntipoSangreChanging(string value);
    partial void OntipoSangreChanged();
    partial void OnciudadNacimientoChanging(string value);
    partial void OnciudadNacimientoChanged();
    partial void OnpesoChanging(int value);
    partial void OnpesoChanged();
    partial void OnestaturaChanging(double value);
    partial void OnestaturaChanged();
    partial void OnidJardinChanging(int value);
    partial void OnidJardinChanged();
    partial void OnidAcudienteChanging(int value);
    partial void OnidAcudienteChanged();
    partial void OnidDatosBasicosChanging(int value);
    partial void OnidDatosBasicosChanged();
    partial void OnidEpsChanging(int value);
    partial void OnidEpsChanged();
    #endregion
		
		public Ninos()
		{
			this._Asistencias = new EntitySet<Asistencias>(new Action<Asistencias>(this.attach_Asistencias), new Action<Asistencias>(this.detach_Asistencias));
			this._AvancesAcademicos = new EntitySet<AvancesAcademicos>(new Action<AvancesAcademicos>(this.attach_AvancesAcademicos), new Action<AvancesAcademicos>(this.detach_AvancesAcademicos));
			this._Acudientes = default(EntityRef<Acudientes>);
			this._DatosBasicos = default(EntityRef<DatosBasicos>);
			this._EPS = default(EntityRef<EPS>);
			this._Jardines = default(EntityRef<Jardines>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNino", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idNino
		{
			get
			{
				return this._idNino;
			}
			set
			{
				if ((this._idNino != value))
				{
					this.OnidNinoChanging(value);
					this.SendPropertyChanging();
					this._idNino = value;
					this.SendPropertyChanged("idNino");
					this.OnidNinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUIP", DbType="BigInt NOT NULL")]
		public long NUIP
		{
			get
			{
				return this._NUIP;
			}
			set
			{
				if ((this._NUIP != value))
				{
					this.OnNUIPChanging(value);
					this.SendPropertyChanging();
					this._NUIP = value;
					this.SendPropertyChanged("NUIP");
					this.OnNUIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipoSangre", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string tipoSangre
		{
			get
			{
				return this._tipoSangre;
			}
			set
			{
				if ((this._tipoSangre != value))
				{
					this.OntipoSangreChanging(value);
					this.SendPropertyChanging();
					this._tipoSangre = value;
					this.SendPropertyChanged("tipoSangre");
					this.OntipoSangreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ciudadNacimiento", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string ciudadNacimiento
		{
			get
			{
				return this._ciudadNacimiento;
			}
			set
			{
				if ((this._ciudadNacimiento != value))
				{
					this.OnciudadNacimientoChanging(value);
					this.SendPropertyChanging();
					this._ciudadNacimiento = value;
					this.SendPropertyChanged("ciudadNacimiento");
					this.OnciudadNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_peso", DbType="Int NOT NULL")]
		public int peso
		{
			get
			{
				return this._peso;
			}
			set
			{
				if ((this._peso != value))
				{
					this.OnpesoChanging(value);
					this.SendPropertyChanging();
					this._peso = value;
					this.SendPropertyChanged("peso");
					this.OnpesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estatura", DbType="Float NOT NULL")]
		public double estatura
		{
			get
			{
				return this._estatura;
			}
			set
			{
				if ((this._estatura != value))
				{
					this.OnestaturaChanging(value);
					this.SendPropertyChanging();
					this._estatura = value;
					this.SendPropertyChanged("estatura");
					this.OnestaturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idJardin", DbType="Int NOT NULL")]
		public int idJardin
		{
			get
			{
				return this._idJardin;
			}
			set
			{
				if ((this._idJardin != value))
				{
					if (this._Jardines.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidJardinChanging(value);
					this.SendPropertyChanging();
					this._idJardin = value;
					this.SendPropertyChanged("idJardin");
					this.OnidJardinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAcudiente", DbType="Int NOT NULL")]
		public int idAcudiente
		{
			get
			{
				return this._idAcudiente;
			}
			set
			{
				if ((this._idAcudiente != value))
				{
					if (this._Acudientes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAcudienteChanging(value);
					this.SendPropertyChanging();
					this._idAcudiente = value;
					this.SendPropertyChanged("idAcudiente");
					this.OnidAcudienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDatosBasicos", DbType="Int NOT NULL")]
		public int idDatosBasicos
		{
			get
			{
				return this._idDatosBasicos;
			}
			set
			{
				if ((this._idDatosBasicos != value))
				{
					if (this._DatosBasicos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDatosBasicosChanging(value);
					this.SendPropertyChanging();
					this._idDatosBasicos = value;
					this.SendPropertyChanged("idDatosBasicos");
					this.OnidDatosBasicosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEps", DbType="Int NOT NULL")]
		public int idEps
		{
			get
			{
				return this._idEps;
			}
			set
			{
				if ((this._idEps != value))
				{
					if (this._EPS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEpsChanging(value);
					this.SendPropertyChanging();
					this._idEps = value;
					this.SendPropertyChanged("idEps");
					this.OnidEpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ninos_Asistencias", Storage="_Asistencias", ThisKey="idNino", OtherKey="idNino")]
		public EntitySet<Asistencias> Asistencias
		{
			get
			{
				return this._Asistencias;
			}
			set
			{
				this._Asistencias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ninos_AvancesAcademicos", Storage="_AvancesAcademicos", ThisKey="idNino", OtherKey="idNino")]
		public EntitySet<AvancesAcademicos> AvancesAcademicos
		{
			get
			{
				return this._AvancesAcademicos;
			}
			set
			{
				this._AvancesAcademicos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acudientes_Ninos", Storage="_Acudientes", ThisKey="idAcudiente", OtherKey="idAcudiente", IsForeignKey=true)]
		public Acudientes Acudientes
		{
			get
			{
				return this._Acudientes.Entity;
			}
			set
			{
				Acudientes previousValue = this._Acudientes.Entity;
				if (((previousValue != value) 
							|| (this._Acudientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Acudientes.Entity = null;
						previousValue.Ninos.Remove(this);
					}
					this._Acudientes.Entity = value;
					if ((value != null))
					{
						value.Ninos.Add(this);
						this._idAcudiente = value.idAcudiente;
					}
					else
					{
						this._idAcudiente = default(int);
					}
					this.SendPropertyChanged("Acudientes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatosBasicos_Ninos", Storage="_DatosBasicos", ThisKey="idDatosBasicos", OtherKey="idDatosBasicos", IsForeignKey=true)]
		public DatosBasicos DatosBasicos
		{
			get
			{
				return this._DatosBasicos.Entity;
			}
			set
			{
				DatosBasicos previousValue = this._DatosBasicos.Entity;
				if (((previousValue != value) 
							|| (this._DatosBasicos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatosBasicos.Entity = null;
						previousValue.Ninos.Remove(this);
					}
					this._DatosBasicos.Entity = value;
					if ((value != null))
					{
						value.Ninos.Add(this);
						this._idDatosBasicos = value.idDatosBasicos;
					}
					else
					{
						this._idDatosBasicos = default(int);
					}
					this.SendPropertyChanged("DatosBasicos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EPS_Ninos", Storage="_EPS", ThisKey="idEps", OtherKey="idEps", IsForeignKey=true)]
		public EPS EPS
		{
			get
			{
				return this._EPS.Entity;
			}
			set
			{
				EPS previousValue = this._EPS.Entity;
				if (((previousValue != value) 
							|| (this._EPS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EPS.Entity = null;
						previousValue.Ninos.Remove(this);
					}
					this._EPS.Entity = value;
					if ((value != null))
					{
						value.Ninos.Add(this);
						this._idEps = value.idEps;
					}
					else
					{
						this._idEps = default(int);
					}
					this.SendPropertyChanged("EPS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jardines_Ninos", Storage="_Jardines", ThisKey="idJardin", OtherKey="idJardin", IsForeignKey=true)]
		public Jardines Jardines
		{
			get
			{
				return this._Jardines.Entity;
			}
			set
			{
				Jardines previousValue = this._Jardines.Entity;
				if (((previousValue != value) 
							|| (this._Jardines.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jardines.Entity = null;
						previousValue.Ninos.Remove(this);
					}
					this._Jardines.Entity = value;
					if ((value != null))
					{
						value.Ninos.Add(this);
						this._idJardin = value.idJardin;
					}
					else
					{
						this._idJardin = default(int);
					}
					this.SendPropertyChanged("Jardines");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Asistencias(Asistencias entity)
		{
			this.SendPropertyChanging();
			entity.Ninos = this;
		}
		
		private void detach_Asistencias(Asistencias entity)
		{
			this.SendPropertyChanging();
			entity.Ninos = null;
		}
		
		private void attach_AvancesAcademicos(AvancesAcademicos entity)
		{
			this.SendPropertyChanging();
			entity.Ninos = this;
		}
		
		private void detach_AvancesAcademicos(AvancesAcademicos entity)
		{
			this.SendPropertyChanging();
			entity.Ninos = null;
		}
	}
}
#pragma warning restore 1591
